from flask import Flask, request, jsonify
from classify import classify_ticket
import logging
import os

app = Flask(__name__)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤ (—á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –∑–∞–ø—Ä–æ—Å—ã –≤ Docker-–ª–æ–≥–∞—Ö)
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

@app.route('/classify', methods=['POST'])
def classify():
    data = request.get_json()
    ticket_text = data.get("ticket")

    if not ticket_text:
        app.logger.warning("Received empty ticket request")
        return jsonify({"error": "Missing 'ticket' field"}), 400

    app.logger.info(f"Classifying ticket: {ticket_text}")
    category = classify_ticket(ticket_text)
    return jsonify({"category": category})

# üîπ –î–æ–±–∞–≤–∏–º health-check endpoint –¥–ª—è Docker / CI
@app.route('/health', methods=['GET'])
def health():
    return jsonify({"status": "ok"}), 200

if __name__ == '__main__':
    # –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è FLASK_ENV —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ ‚Äî —ç—Ç–æ dev
    is_debug = os.getenv("FLASK_ENV") == "development"

    app.run(
        host='0.0.0.0',  # —Å–ª—É—à–∞–µ—Ç –≤—Å–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã (–Ω—É–∂–Ω–æ –¥–ª—è Docker)
        port=5000,
        debug=is_debug
    )
